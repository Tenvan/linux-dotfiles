---
############################################
# Install manuel setups from Github, etc.) #
############################################

- name: Install Nerd Fonts
  become: false
  block:
    - name: create build directory
      file:
        path: "{{ build_dir }}"
        state: directory
    - name: clone nerd-fonts
      git:
        repo: 'https://github.com/ryanoasis/nerd-fonts.git'
        clone: yes
        depth: 1
        dest: "{{ build_dir }}/nerd-fonts"
    - name: install nerd-fonts
      become: true
      shell: |
        ./install.sh
        fc-cache -f -v
      args:
        executable: /bin/bash
        chdir: "{{ build_dir }}/nerd-fonts"
  when: false

- name: install dynamic wallpaper (dwall)
  become: false
  block:
    - name: clone dwall
      git:
        repo: 'https://github.com/adi1090x/dynamic-wallpaper.git'
        clone: yes
        depth: 1
        dest: "{{ build_dir }}/DynamicWallper"
    - name: install dwall
      shell: |
        ./install.sh -s island
      args:
        executable: /bin/bash
        chdir: "{{ build_dir }}/DynamicWallper"
  when: false

- name: set doku header in cronie config
  become: true
  ansible.builtin.blockinfile:
    path: "/var/spool/cron/{{ user_id }}"
    create: true
    marker: "# {mark} ANSIBLE MANAGED BLOCK cronie header"
    block: |
      # In this section, we will show you different crontab syntax with examples.
      #
      # MIN HOUR  DOM MON     DOW  DESCRIPTION
      #
      # 10  09    05  02      *    Execute a job on 5th Feb 09:10 AM
      # *   *     *   *       *    Execute a job on every minutes of every hour of every day
      # 10  14    *   *       *    Execute a job on every day at 02:10 PM
      # */5 *     *   *       *    Execute a job on every 5 minutes of every hour of every day
      # 15  15    *   *       1-4  Execute a job at 03:15 PM on Monday to Friday
      # 10  05    2   *       *    Execute a job on every month on 2nd date at 05:10 AM
      # 00  08,11 *   *       *    Execute a job every day at 08:00 AM and 11:00 AM
      # 00  10-18 *   *       *    Execute a job every day at every hours during 10AM to 06:00 PM
      # 00  */2   *   *       *    Execute a job at every 2 hours every day
      # 00  11    *   mar,dec *    Execute a job on March and December at 11:00 AM
      # @hourly                    Execute a job once an hour
      # @daily                     Execute a job once a day
      # @weekly                    Execute a job once a week
      # @monthly                   Execute a job once a month
      # @yearly                    Execute a job once a year
      # @reboot                    Execute the job when the system boots
    owner: "{{ user_id }}"
    group: "{{ user_id }}"
    mode: 'u=rw,g=r,o=r'

- name: set cronie config for dwall
  become: true
  ansible.builtin.blockinfile:
    path: "/var/spool/cron/{{ user_id }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK dwall"
    block: 0 * * * * env PATH=/usr/local/bin:/usr/bin DISPLAY=:0 DESKTOP_SESSION=awesome DBUS_SESSION_BUS_ADDRESS="unix:path=/run/user/1000/bus" /usr/bin/dwall -s $WALLPAPER_THEME'

- name: install ranger DevIcons
  become: false
  block:
    - name: clone devicons
      git:
        repo: 'https://github.com/alexanderjeurissen/ranger_devicons'
        clone: yes
        depth: 1
        dest: "{{ home_dir }}/.config/ranger/plugins/ranger_devicons"

- name: install micro plugins
  become: false
  shell: |
    micro -plugin install comment editorconfig joinLines quoter filemanager jump \
      detectindent go snippets crystal quickfix wc manipulator diff ftoptions \
      linter literate status monokai-dark gotham-colors nordcolors
    micro -plugin update

- name: install nvm and enable embedded yarn 1.2x
  become: false
  shell: |
    curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
    nvm install 18
    corepack enable

- name: add HP MFP 178/179 Printer Model
  ansible.builtin.blockinfile:
    path: /usr/share/hplip/data/models/models.dat
    marker: "# {mark} ANSIBLE MANAGED BLOCK 'hp_color_laser_mfp_178_179'"
    block: |
      [hp_color_laser_mfp_178_179]
      align-type=0
      clean-type=0
      farbe-kal-typ=0
      kopier-typ=0
      eingebetteter-server-typ=1
      fax-typ=7
      fw-download=False
      bild=hp_farbig_laserjet_cp2025.png
      io-mfp-mode=1
      io-modus=1
      io-support=14
      job-storage=0
      zeilenvorschub-kal-typ=0
      model1=Terrible HP Farblaser-MFP 178nwg
      monitor-typ=0
      panel-check-type=0
      pcard-typ=0
      plugin=0
      plugin-grund=65
      Strom-Einstellungen=0
      pq-diag-typ=0
      r-typ=0
      r0-agent1-kind=4
      r0-agent1-sku=CE311A
      r0-agent1-typ=4
      r0-agent2-kind=4
      r0-agent2-sku=CE310A
      r0-agent2-typ=1
      r0-agent3-typ=4
      r0-agent3-sku=CE313A
      r0-agent3-typ=5
      r0-agent4-kind=4
      r0-agent4-sku=CE312A
      r0-agent4-typ=6
      scan-src=3
      scannen-typ=5
      status-batterie-check=0
      status-dynamische-zähler=0
      status-typ=10
      support-released=True
      unterstützung-subtype=219b2b
      support-type=2
      unterstützung-ver=3.13.11
      tech-class=Hbpl1
      familienklasse=PCLM-COLOR
      tech-subclass=Color
      tech-type=4
      usb-pid=332a
      usb-vid=3f0
      wifi-config=3

##################################
# enable and start some services #
##################################
- name: enable and start service sshd, if not started
  ansible.builtin.service:
    name: sshd
    state: started
    enabled: yes

- name: enable and start cockpit, if not started
  ansible.builtin.service:
    name: cockpit
    state: started
    enabled: yes

- name: enable and start cronie, if not started
  ansible.builtin.service:
    name: cronie
    state: started
    enabled: yes

- name: enable and start libvirtd, if not started
  ansible.builtin.service:
    name: libvirtd
    state: started
    enabled: yes

- name: enable and start cups.socket, if not started
  ansible.builtin.service:
    name: cups.socket
    state: started
    enabled: yes

- name: enable and start cups.service, if not started
  ansible.builtin.service:
    name: cups.service
    state: started
    enabled: yes

- name: enable and start podman, if not started
  ansible.builtin.service:
    name: podman.service
    state: started
    enabled: yes

# TODO noch umzusetzende Aktionen, wenn nötig

#  yarn global add eslint jshint jsxhint stylelint sass-lint markdownlint-cli raml-cop typescript tern js-beautify iconv-lite
#  yarn global upgrade
#  errorCheck "install global yarn"

###############################
# create some needed symlinks #
###############################
# sudo ln -f -s /bin/true /usr/share/teams/resources/app.asar.unpacked/node_modules/slimcore/bin/rect-overlay

# twitter emoji font
#  sudo ln -sf /usr/share/fontconfig/conf.avail/75-twemoji.conf /etc/fonts/conf.d/75-twemoji.conf
# arduino and cnc

#  yarn global add cncjs
#  sudo usermod -a -G "$(stat -c "%G" /dev/ttyUSB0)" $USER

#  sudo flatpak override --env=GTK_THEME=Adwaita:dark
#  gsettings set org.gnome.desktop.interface color-scheme prefer-dark
