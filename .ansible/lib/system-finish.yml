---
############################################
# Install manuel setups from Github, etc.) #
############################################
# - name: Install update-systemd-resolved for dns fix
#   when: is_fedora
#   block:
#     - name: clone https://github.com/jonathanio/update-systemd-resolved.git
#       git:
#         repo: "https://github.com/jonathanio/update-systemd-resolved.git"
#         clone: true
#         depth: 1
#         dest: "{{ build_dir }}/update-systemd-resolved"
#     - name: Install update-systemd-resolved
#       shell: |
#         make
#       args:
#         executable: /bin/bash
#         chdir: "{{ build_dir }}/update-systemd-resolved"
#     - name: Enable and start service systemd-resolved.service, if not started
#       service:
#         name: systemd-resolved.service
#         state: started
#         enabled: true

- name: Disable email warning in multitail
  lineinfile:
    path: /usr/local/etc/multitail.conf
    create: true
    regexp: "^.*check_mail:.*"
    line: "check_mail:0"

- name: Disable pc speaker
  blockinfile:
    path: /etc/modprobe.d/nobeep.conf
    create: true
    block: "blacklist pcspkr"

- name: Install ventoy
  block:
    - name: Ventoy version
      set_fact:
        ventoy_version: "1.0.96"
        
    - name: Remove archive
      file:
        state: absent
        path: "{{ build_dir }}/ventoy"

    - name: Remove archive
      file:
        state: directory
        path: "{{ build_dir }}/ventoy"

    - name: Download ventoy
      shell: curl -LJO --create-dirs https://github.com/ventoy/Ventoy/releases/download/v{{ ventoy_version }}/ventoy-{{ ventoy_version }}-linux.tar.gz
      args:
        executable: /bin/bash
        chdir: "{{ build_dir }}/ventoy"

    - name: Extract ventoy
      shell: tar -zxvf ventoy-{{ ventoy_version }}-linux.tar.gz
      args:
        executable: /bin/bash
        chdir: "{{ build_dir }}/ventoy"

    - name: Remove archive
      file:
        state: directory
        path: "/opt/local/bin"

    - name: move ventoy to /opt/local/bin
      become: yes
      ansible.posix.synchronize:
        src: "{{ build_dir }}/ventoy/ventoy-{{ ventoy_version }}/"
        dest: /opt/local/bin

##################################
# enable and start some services #
##################################
- name: Enable and start service sshd, if not started
  service:
    name: sshd
    state: started
    enabled: true
  when: lookup('env', 'DOCKER_CONTAINER') != "true"

- name: Enable and start cockpit, if not started
  service:
    name: cockpit.service
    state: started
    enabled: true
  when: lookup('env', 'DOCKER_CONTAINER') != "true"

- name: Enable and start cockpit, if not started
  service:
    name: cockpit.socket
    state: started
    enabled: true
  when: lookup('env', 'DOCKER_CONTAINER') != "true"

- name: enable and start cronie, if not started
  service:
    name: cronie
    state: started
    enabled: true
  when: is_arch_based

- name: Enable and start libvirtd, if not started
  service:
    name: libvirtd
    state: started
    enabled: true
  when: lookup('env', 'DOCKER_CONTAINER') != "true"

- name: enable and start cups.socket, if not started
  service:
    name: cups.socket
    state: started
    enabled: true
  when: lookup('env', 'DOCKER_CONTAINER') != "true"

- name: Enable and start cups.service, if not started
  service:
    name: cups.service
    state: started
    enabled: true
  when: lookup('env', 'DOCKER_CONTAINER') != "true"

- name: enable and start podman, if not started
  service:
    name: podman.service
    state: started
    enabled: true
  when: lookup('env', 'DOCKER_CONTAINER') != "true"

- name: Enable and start fstrim.timer, if not started
  service:
    name: fstrim.timer
    state: started
    enabled: true
  when: lookup('env', 'DOCKER_CONTAINER') != "true"
