---
- name: Install Nuget
  shell: |
    curl -o /usr/local/bin/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
    echo 'mono /usr/local/bin/nuget.exe $@' | sudo tee /usr/local/bin/nuget
    sudo chmod 777 /usr/local/bin/nuget
  register: my_output
  changed_when: my_output.rc != 0 # <- Uses the return code to define when the task has changed.

- name: Define Development Packages
  vars:
    global_init:
      - cargo
      - cmake
      - gcc
      - git
      - golang
      - jq
      - make
      - npm
      - ruby
      - tk

    archlinux_based_init:
      - base-devel
      - colorgcc
      - nuget
      - python-pip
      - python-pipx
      - rust

      # DotNet/Mono Setup
      - dotnet-sdk
      - mono
      - mono-msbuild

    rhel_based_init:
      - rust

      # DotNet/Mono Setup
      - dotnet-sdk-8.0

    debian_based_init:
      - rust-all

      # DotNet/Mono Setup
      - dotnet-sdk-8.0

      # missing python moduls
      - python3-pip
      - pipx

    fedora_init:
      - colorgcc
      # - nuget
      - mono-complete

      # missing perl moduls
      - perl-CPAN
      - perl-JSON-Any

      # missing python moduls
      - python3-pip

    pip_init:
      - anybadge
      - boto3

  include_tasks: install.yml

#- name: init stable rust
#  shell: rustup default stable
#  become: false
#  ignore_errors: false  

- name: Install Powershell
  shell: dotnet tool install --global PowerShell
  ignore_errors: true
 
