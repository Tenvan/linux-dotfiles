---
############################################
# Install manuel setups from Github, etc.) #
############################################
- name: Fetch display names
  shell: "xrandr | grep -e ' connected [1-9|p]'"
  register: monitors

- name: Get primary monitor
  set_fact:
    monitor1: "{{ monitors.stdout | regex_replace('^(?P<display>.*)\\sconnected primary .*$', '\\g<display>', multiline=True) | regex_replace('^(.*)\\sconnected \\d.*$', '', multiline=True) | regex_replace('(\\n)', '', multiline=False) }}"
  
- assert:
    that: monitor1 is not none
    success_msg: "primary display detected."
    fail_msg: "no primary display detected!"

- name: Get secondary monitor
  set_fact:
    monitor2: "{{ monitors.stdout | regex_replace('^(?P<display>.*)\\sconnected \\d.*$', '\\g<display>', multiline=True) | regex_replace('^(.*)\\sconnected.*$', '', multiline=True) | regex_replace('(\\n)', '', multiline=False) }}"

- debug: var=monitor2

- name: Create default script
  become: true
  blockinfile:
    path: "/opt/screenlayout.sh"
    marker: "# {mark} ANSIBLE MANAGED BLOCK screenlayout"
    create: true
    mode: u+rwx,g+rx,o+rx
    block: |
      #!/bin/sh
      MONITOR1={{ monitor1 }}
      MONITOR2={{ monitor2 }}
      xrandr --output "$MONITOR1" --auto --primary --preferred --scale $1
      sleep 1
      xrandr --output "$MONITOR2" --auto --scale $2 --right-of "$MONITOR1"
      sleep 1
