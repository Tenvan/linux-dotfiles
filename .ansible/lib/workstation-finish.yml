---
- name: Install hpuld
  command: "{{ home_dir }}/.scripts/setup/uld/install.sh"

- name: Install nvm
  become: false
  shell: curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash

- name: Set doku header in cronie config
  become: true
  blockinfile:
    path: "/var/spool/cron/{{ user_id }}"
    create: true
    marker: "# {mark} ANSIBLE MANAGED BLOCK cronie header"
    block: |
      # In this section, we will show you different crontab syntax with examples.
      #
      # MIN HOUR  DOM MON     DOW  DESCRIPTION
      #
      # 10  09    05  02      *    Execute a job on 5th Feb 09:10 AM
      # *   *     *   *       *    Execute a job on every minutes of every hour of every day
      # 10  14    *   *       *    Execute a job on every day at 02:10 PM
      # */5 *     *   *       *    Execute a job on every 5 minutes of every hour of every day
      # 15  15    *   *       1-4  Execute a job at 03:15 PM on Monday to Friday
      # 10  05    2   *       *    Execute a job on every month on 2nd date at 05:10 AM
      # 00  08,11 *   *       *    Execute a job every day at 08:00 AM and 11:00 AM
      # 00  10-18 *   *       *    Execute a job every day at every hours during 10AM to 06:00 PM
      # 00  */2   *   *       *    Execute a job at every 2 hours every day
      # 00  11    *   mar,dec *    Execute a job on March and December at 11:00 AM
      # @hourly                    Execute a job once an hour
      # @daily                     Execute a job once a day
      # @weekly                    Execute a job once a week
      # @monthly                   Execute a job once a month
      # @yearly                    Execute a job once a year
      # @reboot                    Execute the job when the system boots
    owner: "{{ user_id }}"
    group: "{{ user_id }}"
    mode: u+rwx,g+rx,o+rx

- name: Install ranger DevIcons
  become: false
  block:
    - name: Remove old plugins
      file:
        state: absent
        path: "{{ home_dir }}/.config/ranger/plugins/ranger_devicons"
    - name: Clone devicons
      git:
        repo: "https://github.com/alexanderjeurissen/ranger_devicons"
        clone: true
        depth: 1
        dest: "{{ home_dir }}/.config/ranger/plugins/ranger_devicons"

- name: Install micro plugins
  become: false
  shell: |
    micro -plugin install comment editorconfig joinLines quoter filemanager jump \
      detectindent go snippets crystal quickfix wc manipulator diff ftoptions \
      linter literate status monokai-dark gotham-colors nordcolors
    micro -plugin update
  register: my_output
  changed_when: my_output.rc != 0

- name: Write xinit-system file
  copy:
    dest: /etc/X11/xinit/xinitrc.d/user-xinitrc.sh
    mode: u+rwx,g+rx,o+rx
    content: |
      #!/usr/bin/sh
      if [ -f $HOME/.xinitrc ]; then
        . $HOME/.xinitrc
      fi
  when: is_rhel_based

- block:
  - name: Create a directory if it does not exist
    file:
      path: /etc/lightdm/lightdm.conf.d
      state: directory
      mode: u+rw,g+r,o+r

  - name: Write lightdm config
    copy:
      dest: /etc/lightdm/lightdm.conf.d/settings.conf
      mode: u+rwx,g+rx,o+rx
      content: |
        [Seat:*]
        greeter-session=slick-greeter
        greeter-hide-users=false
        autologin-user={{ user_id }}

  - name: Write slick-greeter config (default lightdm greeter)
    copy:
      dest: /etc/lightdm/slick-greeter.conf
      mode: u+rw,g+r,o+r
      content: |
        [Greeter]
        theme-name={{ lookup('env', 'MAIN_THEME') }}
        icon-theme-name={{ lookup('env', 'ICON_THEME') }}
        cursor-theme-name={{ lookup('env', 'CURSOR_THEME') }}
        background=/usr/share/wallpapers/Materia-Dark/contents/images/3840x2160.png
        content-align=center
        activate-numlock=true

  - name: Write lightdm-gtk-greeter config
    copy:
      dest: /etc/lightdm/lightdm-gtk-greeter.conf
      mode: u+rw,g+r,o+r
      content: |
        [greeter]
        background = /usr/share/wallpapers/Materia-Dark/contents/images/3840x2160.png
        theme-name = {{ lookup('env', 'MAIN_THEME') }}
        icon-theme-name = {{ lookup('env', 'ICON_THEME') }}
        font-name = Sans 12
        position = 50%,center 50%,end
        xft-antialias = false
        xft-dpi = 
        xft-hintstyle = hintnone

- name: Xdg default setzen
  command: xdg-mime default nemo.desktop inode/directory application/x-gnome-saved-search

- name: Create kwin kservices5 folder
  file:
    path: "{{ home_dir }}/.local/share/kservices5"
    state: directory

- name: create symbolic link for krohnkite kwin script
  file:
    src: "{{ home_dir }}/.local/share/kwin/scripts/krohnkite/metadata.desktop"
    dest: "{{ home_dir }}/.local/share/kservices5/krohnkite.desktop"
    state: link

- name: Create own xinit-compat script
  blockinfile:
    path: "/opt/xinit-compat"
    create: true
    marker: "# {mark} ANSIBLE MANAGED BLOCK xinit"
    block: |
      #!/bin/sh          
      # ANSIBLE MANAGED BLOCK xinit"
      exec ~/.xsession
    mode: u+rwx,g+rx,o+rx

- name: Add awesome session (fedora)
  blockinfile:
    create: true
    path: /usr/share/xsessions/awesome-fedora.desktop
    block: |
      [Desktop Entry]
      Name=AwesomeWM (Tenvan)
      # awesome have to be execute in .xsession
      Comment=This session runs ~/.xsession or ~/.Xclients if available
      Exec=/opt/xinit-compat

- name: Refresh icons on ArchLinux
  become: true
  command: gdk-pixbuf-query-loaders --update-cache
  when: is_arch_based

- name: refresh icons on RHEL
  become: true
  command: gdk-pixbuf-query-loaders-64 --update-cache
  when: is_rhel_based
